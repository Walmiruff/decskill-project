{"version":3,"file":"dcsk-store.js","sources":["../../../../projects/dcsk/store/src/lib/service/store.service.ts","../../../../projects/dcsk/store/src/lib/actions/post_action.ts","../../../../projects/dcsk/store/src/lib/reducers/post_reducer.ts","../../../../projects/dcsk/store/src/lib/selectors/post_selector.ts","../../../../projects/dcsk/store/src/lib/store-dcsk.module.ts","../../../../projects/dcsk/store/src/public-api.ts","../../../../projects/dcsk/store/src/dcsk-store.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { IUser } from '../models/user.model';\nimport { IPost } from '../models/post.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StoreService {\n  private user1: IUser = {\n    id: 1,\n    name: 'Marl Otto',\n    tag: '@poloConghiale',\n    photo: 'https://github.com/mdo.png'\n};\n  private userSubject: BehaviorSubject<IUser> = new BehaviorSubject<IUser>(this.user1);\n\n  private postsSubject: BehaviorSubject<IPost[]> = new BehaviorSubject<IPost[]>([]);\n\n  constructor() {\n    // Carregar dados do localStorage quando o serviço é inicializado\n    this.loadFromLocalStorage();\n  }\n\n  // Métodos para obter Observables dos estados\n  getUser(): Observable<IUser> {\n    return this.userSubject.asObservable();\n  }\n\n  getPosts(): Observable<IPost[]> {\n    return this.postsSubject.asObservable();\n  }\n\n  // Métodos para adicionar dados ao estado\n  addUser(user: IUser): void {\n    this.userSubject.next(user);\n    this.saveToLocalStorage('user', user);\n  }\n\n  addPost(post: IPost): void {\n    const posts = [...this.postsSubject.value, post];\n    this.postsSubject.next(posts);\n    this.saveToLocalStorage('posts', posts);\n  }\n  \n  // Método para deletar um post\n  deletePost(postId: number | string): void {\n    const posts = this.postsSubject.value.filter(\n      (post) => post.id !== postId\n    );\n    this.postsSubject.next(posts);\n    this.saveToLocalStorage('posts', posts);\n  }\n\n  // Salvar no localStorage\n  private saveToLocalStorage(key: string, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  // Carregar do localStorage\n  private loadFromLocalStorage(): void {\n    const user = JSON.parse(localStorage.getItem('user') ?? '[]');\n    this.userSubject.next(user);\n\n    const posts = JSON.parse(localStorage.getItem('posts') ?? '[]');\n    this.postsSubject.next(posts);\n  }\n}","import { Action } from '@ngrx/store';\r\n\r\nimport { IPost } from '../models/post.model'; \r\n\r\nexport enum PostActionTypes {\r\n    GETALLPOSTS = '[POST GETALL] All Posts getAll',\r\n    LOADALLPOSTS = '[POST LOADED] All Posts Loaded',\r\n    ADDPOST = '[POST ADD] Add Post',\r\n    UPDATEPOST = '[POST UPDATE] Update Post',\r\n    REMOVEPOST = '[POST REMOVE] Remove Post'\r\n}\r\n\r\n\r\nexport class GETALLPOSTS implements Action {\r\n    readonly type = PostActionTypes.GETALLPOSTS;\r\n}\r\n\r\n\r\nexport class LOADALLPOSTS implements Action {\r\n    readonly type = PostActionTypes.LOADALLPOSTS;\r\n    constructor(public payload: { posts: IPost[]}) { console.log(payload.posts)  }\r\n}\r\n\r\nexport class ADDPOST implements Action {\r\n    readonly type = PostActionTypes.ADDPOST;\r\n    constructor (public payload: { post: IPost }) {}\r\n}\r\n\r\n\r\nexport class UPDATEPOST implements Action {\r\n    readonly type = PostActionTypes.UPDATEPOST;\r\n    constructor(public payload: { id: number; changes: Partial<IPost> }) {}\r\n}\r\n\r\n\r\nexport class REMOVEPOST implements Action{\r\n    readonly type = PostActionTypes.REMOVEPOST;\r\n    constructor ( public payload: {id: number | number}){}\r\n}\r\n\r\n\r\n\r\nexport type PostAction =  GETALLPOSTS | LOADALLPOSTS | ADDPOST | UPDATEPOST | REMOVEPOST;\r\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\n\r\nimport { IPost } from '../models/post.model';\r\nimport { PostAction, PostActionTypes } from '../actions/post_action';\r\n\r\n\r\nexport const adapter: EntityAdapter<IPost> = createEntityAdapter<IPost>();\r\n\r\nexport interface PostState extends EntityState<IPost> { }\r\n\r\nexport const initialPostState: PostState = adapter.getInitialState(\r\n    {\r\n        id: '1',\r\n        userId: '@anyuser',\r\n        content: 'content test',\r\n        date: new Date()\r\n    }\r\n);\r\n\r\nexport function PostReducer(state = initialPostState, action: PostAction): PostState {\r\n    switch (action.type) {\r\n        case PostActionTypes.LOADALLPOSTS:\r\n            return adapter.setAll(action.payload.posts, state);\r\n        case PostActionTypes.ADDPOST:\r\n            return adapter.addOne(action.payload.post, state);\r\n        case PostActionTypes.UPDATEPOST:\r\n            return adapter.updateOne({ id: action.payload.id, changes: action.payload }, state);\r\n        case PostActionTypes.REMOVEPOST:\r\n            return adapter.removeOne(action.payload.id, state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const {\r\n    selectAll,\r\n    selectEntities,\r\n    selectIds,\r\n    selectTotal\r\n} = adapter.getSelectors();\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { PostState } from '../reducers/post_reducer';\r\nimport * as fromPostReducer from '../reducers/post_reducer';\r\n\r\n\r\nexport const selectPostState = createFeatureSelector<PostState>('posts');\r\n\r\n\r\nexport const selectAllPosts = createSelector(\r\n    selectPostState,\r\n    fromPostReducer.selectAll\r\n)\r\n","import { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { PostReducer } from './reducers/post_reducer';\nimport { StoreService } from './service/store.service';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    StoreModule.forFeature('posts', PostReducer)\n  ],\n  exports: [\n  ],\n  providers: [\n    StoreService\n  ]\n})\nexport class StoreDcskModule { }\n","/*\n * Public API Surface of store\n */\n\nexport * from './lib/service/store.service';\nexport * from './lib/selectors/post_selector';\nexport * from './lib/reducers/post_reducer';\nexport * from './lib/actions/post_action';\nexport * from './lib/models/user.model';\nexport * from './lib/models/post.model';\nexport * from './lib/store-dcsk.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["fromPostReducer.selectAll"],"mappings":"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"}